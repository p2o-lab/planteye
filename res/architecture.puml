@startuml

!include dark_theme.puml

interface Vision{
+run(): void
}

class VisionLocalConfiguration{
+path_to_config_file: str
+cfg_provider: FileConfigProvider
+pipeline_exec: PipelineExecutor
}

class VisionOnlineConfiguration{
+cfg_provider: FileConfigProvider
+pipeline_exec: PipelineExecutor
}
note top: not implemented yet

class PipelineExecutor {
+config_provider: ConfigProvider
+config_dict: dict
+shell: Shell
+inlets: list
+processors: list
+read_configuration(): void
+apply_configuration(): void
+configure_inlets(): void
+configure_shell(): void
+single_execution(): list
+add_transformer(): void
+run():run
}

interface Shell{
+import_configuration(config_provider: ConfigProvider)
+apply_configuration(): void
+attach_callback(callback: callable): void
}


class LocalShell{
+config: Configuration
+name: str
+time_scheduler: TimeScheduler
+callback: callable
+execution_step(): void
}

class TimeScheduler{
+time_interval: float
+executed_function: callable
+thread: threading.Thread()
+stop_flag: bool
}


class RestAPIShell{
+config: Configuration
+webserver_name: str
+webserver: RestAPIWebserver
+webserver_thread: threading.Thread()
+response_callback: callable
+homepage_callback(callback: callable): void
+connect(): void
+disconnect(): void
}

class RestAPIWebserver{
+name: str
+host: str
+port: int
+endpoint_flask_app:flask.Flask(name:str)
+add_url_rule(endpoint: str, name: str, rule: callable)
+stop_flag: bool
}

interface Inlet{
+import_configuration(config_provider: ConfigProvider)
+apply_configuration(): void
+retrieve_data(): void
}

abstract class CameraInlet{
+config:CameraConfiguration
+name: str
+type: str
+camera_object: object
+camera_status: CameraStatus
+set_parameter(parameter: str, value: int, float, str, bool): void
+connect(): void
+disconnect(): void
}

class GenericCameraInlet{
+config:CameraConfiguration
+name: str
+type: str
+camera_object: object
+camera_status: CameraStatus
+set_parameter(parameter: str, value: int, float, str, bool): void
+connect(): void
+disconnect(): void
+get_camera_info(): void
}

class NeoApiCameraInlet{
+config:CameraConfiguration
+name: str
+type: str
+camera_object: object
+camera_status: CameraStatus
+set_parameter(parameter: str, value: int, float, str, bool): void
+connect(): void
+disconnect(): void
+get_camera_info(): void
}

class StaticDataInlet{
+config:StaticValueConfiguration
+name: str
+type: str
}

class OPCUADataInlet{
+config:OPCUAValueConfiguration
+name: str
+type: str
+opcua_client: OPCUAClient
+poll_node() : void
+get_opcua_server_info(): void
}

class OPCUAClient{
server: str
username: str
password: str
client: opcua.Client
connection_status: bool
connectivity_thread: threading.Thread
reconnect_interval: float
connect_once: bool
stop_flag: bool
stopped: bool
+connect(): void
+disconnect(): void
-__single_connect(): void
-__connectivity_routine(): void
+check_connection(): void
+get_connection_status(): bool
+get_url(): str
+get_server_obj(): opcua.Client
}

class RestAPIInlet
{
+config:OPCUAValueConfiguration
+name: str
+type: str
+get_rest_api_info(): void
}
note top: not implemented yet

interface ConfigProvider{
+provide_config(): void
+provide_name(): void
}

class FileConfigProvider{
+cfg_name: str
+cfg_file: str
+provide_config(): dict
+provide_name(): str
}

class DictConfigProvider{
+cfg_name: str
+cfg_dict: dict
+provide_config(): dict
+provide_name(): str
}

interface Configuration{
+read(cfg_provider: ConfigProvider): void
}

abstract class GeneralConfiguration{
+type: str
+parameters: list
+metadata: dict
+access_data: dict
+cfg_dict: dict
}

class InletConfiguration{
+type: str
+parameters: list
+metadata: dict
+access_data: dict
+cfg_dict: dict
}

class ShellConfiguration{
+type: str
+parameters: list
+metadata: dict
+access_data: dict
+cfg_dict: dict
}

class CameraConfiguration{
+type: str
+parameters: list
+metadata: dict
+access_data: dict
+cfg_dict: dict
}

class StaticValueConfiguration{
+value: str, int, float, bool
}

class OPCUAValueConfiguration{
}

class RestAPIConfiguration{
}
note top: not implemented yet

class RestAPIShellConfiguration{
}

class LocalShellConfiguration{
+storage_path: str
+time_interval: float
}

class CameraStatus{
+initialised: bool
+configured: bool
+fully_configured: bool
+connected: bool
+capturing: bool
+as_dict(): dict
}

interface DataChunk{
+add_data(data: DataChunkData): void
+add_metadata(metadata: MetadataChunk): void
+add_status(status: DataChunkStatus): void
+as_dict(): dict
}

class GeneralDataChunk{
+name: str
+type: str
+access_data: dict
+data: list
+metadata: list
+status: list
}


abstract class DataChunkData{
+as_dict(): dict
}

class DataChunkValue{
+name: str
+value: str, int, float, bool
}

class DataChunkImage{
+name: str
+value: np.ndarray, str
+encode_as_base64(): void
+base64_decoder(frame:str): np.ndarray
}


abstract class DataChunkStatus{
+as_dict(): dict
}

class CapturingStatus{
+operation: str
+code: int
+message: str
+infer_message(): void
+as_dict(): dict
+get_message(): str
}

class OPCUAReadStatus{
+operation: str
+code: int
+message: str
+infer_message(): void
+as_dict(): dict
+get_message(): str
}

abstract class MetadataChunk{
+as_dict: dict
}

class MetadataChunkData{
+name: str
+value: str, int, float, bool
}

interface DataProcessor{
+apply_processor(input_data): void
}

class EncodeImageChunksToBase64{
+apply_processor(chunks: list): void
}

class ChunksToDict{
+apply_processor(chunks: list): dict
}

Vision <|-- VisionLocalConfiguration
Vision <|-- VisionOnlineConfiguration
VisionLocalConfiguration ..> PipelineExecutor
VisionOnlineConfiguration ..> PipelineExecutor

PipelineExecutor "1"*--"1" Shell: contains
PipelineExecutor "1"*--"1..*" Inlet: contains
PipelineExecutor "1"*--"0..*" DataProcessor: contains
PipelineExecutor "1"*--"1" ConfigProvider: contains

Shell <|-- LocalShell
LocalShell --|> TimeScheduler: uses
Shell <|-- RestAPIShell
RestAPIShell --|> RestAPIWebserver: uses

Inlet <|.. CameraInlet
CameraInlet <|-- GenericCameraInlet
CameraInlet <|-- NeoApiCameraInlet

Inlet <|-- StaticDataInlet
Inlet <|-- OPCUADataInlet
OPCUADataInlet --|> OPCUAClient: uses

Inlet <|-- RestAPIInlet


ConfigProvider <|-- FileConfigProvider
ConfigProvider <|-- DictConfigProvider
ConfigProvider "1"--*"1" Configuration: provides

Shell  "1"*--"1" ShellConfiguration: configures
Inlet  "1"*--"1" InletConfiguration: configures

Configuration <|.. GeneralConfiguration
GeneralConfiguration <|-- ShellConfiguration
GeneralConfiguration <|-- InletConfiguration
InletConfiguration <|-- CameraConfiguration
InletConfiguration <|-- StaticValueConfiguration
InletConfiguration <|-- OPCUAValueConfiguration
InletConfiguration <|-- RestAPIConfiguration
ShellConfiguration <|-- RestAPIShellConfiguration
ShellConfiguration <|-- LocalShellConfiguration

CameraInlet  "1"*--"1" CameraStatus: contains

DataChunk <|.. GeneralDataChunk

GeneralDataChunk "1"*--"1" DataChunkData: contains
GeneralDataChunk "1"*--"1" DataChunkStatus: contains
GeneralDataChunk "1"*--"1" MetadataChunk: contains

DataChunkData <|-- DataChunkValue
DataChunkData <|-- DataChunkImage

DataChunkStatus <|-- CapturingStatus
DataChunkStatus <|-- OPCUAReadStatus

MetadataChunk <|-- MetadataChunkData

Inlet "1"--*"1..*" DataChunk : generates


DataProcessor <|-- EncodeImageChunksToBase64
DataProcessor <|-- ChunksToDict


@enduml